---
interface Props {
    class?: string;
    fallbackPath: string;
    text?: string;
}

const { class: className, fallbackPath, text = 'Go Back' } = Astro.props;
---

<div>
    <a
        href={fallbackPath}
        data-go-back
        class:list={[
            'group inline-flex items-center px-1 py-1.5 transition',
            className
        ]}
    >
        <svg
            class="mr-2 -ml-1 stroke-black dark:stroke-off-white stroke-2"
            fill="none"
            width="10"
            height="10"
            viewBox="0 0 10 10"
            aria-hidden="true"
        >
            <path
                class="opacity-0 transition group-hover:opacity-100"
                d="M10 5h-7"></path>
            <path
                class="transition group-hover:translate-x-[-3px]"
                d="M9 1L5 5l4 4"></path>
        </svg>
        {text}
    </a>
</div>

<script>
    import { supportsViewTransitions } from 'astro:transitions/client';

    if (supportsViewTransitions) {
        document.addEventListener('astro:page-load', initGoBack);
    } else {
        initGoBack();
    }

    function initGoBack() {
        const backButton = document.querySelector('[data-go-back]');
        const hasHistory = history.length > 1;
        const referrer = document.referrer;
        const isSameOrigin =
            referrer && new URL(referrer).origin === window.location.origin;
        console.log('referrer', referrer);
        console.log('window', window.location.origin);
        console.log('history', history);
        backButton?.addEventListener('click', (e) => {
            if (hasHistory && isSameOrigin) {
                console.log('Going back with history!!!!!!!');
                e.preventDefault();
                history.back();
            }
            console.log('Going back');
            // If conditions aren't met, it will use the fallback href
        });
    }
</script>
